@import '../fairdata.scss';
@import '../notification.scss';

html, body, .root {
    width: 100%;
    height: 100%;
    margin: 0;
}

.root {
    display: flex;
    flex-direction: column;
}

.example-container {
    .items {
        padding: 0 1rem;
        margin: 1rem 0;
    }

    pre {
        margin: 0;
    }

    code, .alert {
        width: 100%;
    }

    width: 85%;
    margin-left: auto;
    margin-right: auto;
    margin-top: 2rem;
    margin-bottom: 3rem;
    padding: 2rem;
    box-shadow: 0px 5px 12px rgba(0, 45, 61, 0.1);

    @media screen and (max-width: #{map-get($grid-breakpoints, "md")}) {
        width: 95%;
        margin-left: 0 !important;
        margin-right: 0 !important;
    }

    .colors-container {
        display: flex;
        flex-wrap: wrap;
        color: white;
        font-size: 1.3rem;
        text-transform: uppercase;

        .color {
            width: 100px;
            height: 100px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            margin: .5rem;
            cursor: pointer;

            @each $color, $value in $fd-colors {
                &.fd-#{$color} {
                background-color: $value;
                }
            }

            @each $color, $value in $fd-colors {
                &.fd-#{$color}-light {
                background-color: map-get($fd-light-colors, $color);
                color: $value;
                }
            }

            transition: box-shadow 0.2s ease-in-out;
            &:hover {
                box-shadow: 0px 5px 12px rgba(0, 45, 61, 0.5);
            }
        }
    }

}

h1, h2 {
    margin-bottom: 0;
}

.alert {
    width: 90%;
    margin-left: 2rem;
}

code {
    width: 90%;
    margin-left: auto;
    margin-right: auto;
    margin-top: 0;
    color: #e83e8c;
    word-wrap: break-word;
    padding: .2em .4em;
    font-size: 85%;
    background-color: rgba(27,31,35,.05);
    border-radius: 3px;
}

a.title {
    text-decoration: none;
    color: inherit;
    cursor: pointer;

    &:hover {
        text-decoration: underline;
    }
}
